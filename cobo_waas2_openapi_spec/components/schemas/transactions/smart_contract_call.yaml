type: object
description: The data for create smart contract call transaction.
required:
  - request_id
  - request_type
  - from_wallet_id
  - from_address_str
  - chain_id
  - to_address_str
  - calldata
properties:
  request_id:
    type: string
    description: Unique id of the request.
    example: 'f47ac10b-58cc-4372-a567-0e02b2c3d479'
  request_type:
    $ref: './request_type.yaml'
  from_wallet_id:
    type: string
    description: Unique id of the wallet to transfer from.
    format: uuid
    example: 'f47ac10b-58cc-4372-a567-0e02b2c3d479'
  from_address_str:
    type: string
    description: From address
    example: "19AR6YWEGbSoY8UT9Ksy9WrmrZPD5sL4Ku"
  chain_id:
    type: string
    description: The blockchain on which the token operates.
    pattern: ^[A-Z]+$
    example: 'ETH'
  to_address_str:
    type: string
    description: To address
    example: "bc1q0qfzuge7vr5s2xkczrjkccmxemlyyn8mhx298v"
  value:
    type: string
    description: >
      Transaction value (Note that this is an absolute value.
      If you trade 1.5 ETH, then the value is 1.5)
    example: '1.5'
  calldata:
    type: string
    description: >
      calldata for this transaction. Commonly used as part of contract interaction.
    format: byte
    example: "U3dhZ2dlciByb2Nrcw=="
  category_names:
    type: array
    description: The category names for transfer.
    items:
      type: string
      example: 'Trading'
  description:
    type: string
    description: The description for transfer.
    example: 'Transfer from wallet'
  mpc_used_key_group:
    $ref: './mpc_signing_group.yaml'
  fee:
    $ref: './fees/transaction_fee.yaml'